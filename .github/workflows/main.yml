name: CICD

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    env:
      AWS_REGION: ap-south-1
      ECR_REGISTRY: 490004620091.dkr.ecr.ap-south-1.amazonaws.com
      REPOSITORY: frontend
      IMAGE_TAG: latest
      CLUSTER_NAME: ECS-CLUSTER
      SERVICE_NAME: frontend
      TASK_DEFINITION_NAME: frontend-revision1.json  # Use the correct path here
      CONTAINER_NAME: frontend

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: List files in repository (for debugging)
        run: |
          ls -alh  # List all files to check if the task definition file exists

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT    

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: frontend-revision1.json  # Ensure this path is correct
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.SERVICE_NAME }}
          cluster: ${{ env.CLUSTER_NAME }}
          wait-for-service-stability: true
